---

# FILE:            {{ role_path }}/tasks/mode-backup.yml
# LICENSE:         Public Domain
# USAGE:
#                 abr_driver: 'backup'

# STEP 1: SETUP ________________________________________ (abr_skip_setup: false)
#         Setup step will create directories used by ABR and will install
#         dependencies based on enabled drivers and strategies
- name: "{{ abr__task_prefix }} | mode-backup | setup/main.yml"
  include: "{{ include_task_mode_backup_setup_item }}"
  with_first_found:
    - "{{ abr_overrides_directory }}/tasks/setup/main.yml"
    - "{{ role_path }}/tasks/setup/main.yml"
  loop_control:
    loop_var: "include_task_mode_backup_setup_item"
  when:
    - "(abr_skip_setup|bool is sameas false)"

# STEP 2: BACKUP MAIN TASK ________________________________ (abr_driver: backup)
#         On this step, abr_driver convert whatever will need backup/restore
#         to a format that other steps can undestand
- name: "{{ abr__task_prefix }} | mode-backup | backup/main.yml"
  include: "{{ include_task_mode_backup_backup_item }}"
  with_first_found:
    - "{{ abr_overrides_directory }}/tasks/backup/main.yml"
    - "{{ role_path }}/tasks/backup/main.yml"
  loop_control:
    loop_var: "include_task_mode_backup_backup_item"
  when:
    - "(abr_skip_maintask|bool is sameas false)"

# STEP 4: DATA CONVERSION ____________________________ (abr_strategy_conversion)
#         This optimal and less frequent step may allow users to create own
#         rotines to implement data conversion (like an intermediate step to
#         convert an Oracle SQL dump to an MariaDB dump with sqlines)
- name: "{{ abr__task_prefix }} | mode-restore | data-conversion/main.yml"
  include: "{{ include_task_mode_restore_item }}"
  with_first_found:
    - "{{ abr_overrides_directory }}/tasks/data-conversion/main.yml"
    - "{{ role_path }}/tasks/data-conversion/main.yml"
  loop_control:
    loop_var: "include_task_mode_restore_item"
  when:
    - "(abr_strategy_conversion is defined) and (abr_strategy_conversion)"
    - "(abr_skip_conversion|bool is sameas false)"

# STEP 5: COMPRESSION _______________________________ (abr_strategy_compression)
- name: "{{ abr__task_prefix }} | mode-backup | compress/main.yml"
  include: "{{ include_task_mode_backup_compress_item }}"
  with_first_found:
    - "{{ abr_overrides_directory }}/tasks/compress/main.yml"
    - "{{ role_path }}/tasks/compress/main.yml"
  loop_control:
    loop_var: "include_task_mode_backup_compress_item"
  when:
    - "(abr_strategy_compression is defined) and (abr_strategy_compression)"
    - "(abr_skip_compression|bool is sameas false)"

# STEP 6: ENCRYPT ____________________________________ (abr_strategy_encryption)
# Security note: Compression -> Encryption is more efficent, but a bit less
#                secure if you really paranoid. In this case, just disable
#                compression
- name: "{{ abr__task_prefix }} | mode-backup | encrypt/main.yml"
  include: "{{ include_task_mode_backup_encrypt_item }}"
  with_first_found:
    - "{{ abr_overrides_directory }}/tasks/encrypt/main.yml"
    - "{{ role_path }}/tasks/encrypt/main.yml"
  loop_control:
    loop_var: "include_task_mode_backup_encrypt_item"
  when:
    - "(abr_strategy_encryption is defined) and (abr_strategy_encryption)"
    - "(abr_skip_encryption|bool is sameas false)"

# STEP 7: UPLOAD _______________________________  (abr_strategy_synchronization)
- name: "{{ abr__task_prefix }} | mode-backup | upload/main.yml"
  # include: upload/main.yml
  include: "{{ include_task_mode_backup_upload_item }}"
  with_first_found:
    - "{{ abr_overrides_directory }}/tasks/upload/main.yml"
    - "{{ role_path }}/tasks/upload/main.yml"
  loop_control:
    loop_var: "include_task_mode_backup_upload_item"
  when:
    - "(abr_skip_synchronization|bool is sameas false)"

# STEP 8: CLEANUP ____________________________________ (abr_skip_cleanup: false)
- name: "{{ abr__task_prefix }} | mode-backup | restore-options/main.yml"
  include: "{{ include_task_mode_backup }}"
  with_first_found:
    - "{{ abr_overrides_directory }}/tasks/cleanup/main.yml"
    - "{{ role_path }}/tasks/cleanup/main.yml"
  loop_control:
    loop_var: "include_task_mode_backup"
  when:
    - "(abr_skip_cleanup|bool is sameas false)"

# STEP 9: RESTORE OPTIONS ________________________ (abr_mode: "restore-options")
#         By default, we will finish the backup mode with message that would
#         show with restore-options mode
- name: "{{ abr__task_prefix }} | mode-backup | restore-options/main.yml"
  include: "{{ include_task_mode_backup }}"
  with_first_found:
    - "{{ abr_overrides_directory }}/tasks/restore-options/main.yml"
    - "{{ role_path }}/tasks/restore-options/main.yml"
  loop_control:
    loop_var: "include_task_mode_backup"
