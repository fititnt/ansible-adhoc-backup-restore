---

# FILE:            {{ role_path }}/tasks/main.yml
# LICENSE:         Public Domain

- name: "abr | ABR {{ abr_version }} Welcome message | Mode: {{ abr_mode }}"
  debug:
    msg:
      # aaaa: "{{ (abr_database is defined and abr_database|bool) | type_debug }}"
      # bbbb: "{{ (abr_database is defined and abr_database|bool) | ternary('_aa', '__bb', '__ccc') }}"
      # aaaa: "{{ ((abr_database is defined and abr_database|bool) | ternary('__' + abr_database, '__all-databases', '__all-databases')) }}"
      abr:
        abr_fs_dirs: "{{ abr_fs_dirs }}"
        # abr_backup_disabled: "{{ abr_backup_disabled }}"
        # abr_restore_disabled: "{{ abr_restore_disabled }}"
      node:
        os: "{{ ansible_os_family | default('undefined') | lower }}"
        dist: "{{ ansible_distribution | default('undefined') | lower }}"
        dist_release: "{{ ansible_distribution_release | default('undefined') | lower }}"
        dist_major_ver: "{{ ansible_distribution_major_version | default('undefined') | lower }}"
        ansible_lsb: "{{ ansible_lsb | default('undefined') }}"
        # If behind NAT, this may not represent real public IPv4.
        # Alternative: https://docs.ansible.com/ansible/latest/modules/ipify_facts_module.html
        ansible_default_ipv4: "{{ ansible_default_ipv4.address | default('undefined') }}"
      run_related:
        ansible_run_tags: "{{ ansible_run_tags | default('undefined') }}"
        ansible_skip_tags: "{{ ansible_skip_tags | default('undefined') }}"
  tags:
    - abr
    - always

## Variable loading based on node Operational System ___________________________
- name: "abr | OS Family variables (Override with abr_vars_osfamily)"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ (abr_vars_osfamily is defined) | ternary(abr_vars_osfamily, 'name-of-a-file-that-does-not-exist.yml') }}"
    - "os-family/{{ ansible_os_family | default('undefined') | lower }}.yml"
    - "os-family/{{ (ansible_os_family is defined) | ternary('untested','unknown') }}.yml"
  tags:
    - always

### DRAFT of v0.5.0 new standard, START ________________________________________
- name: "{{ abr_mode }}.yml"
  include: "mode-{{ abr_mode }}.yml"

### DRAFT of v0.5.0 new standard, END __________________________________________
## Run each abr subcomponent ___________________________________________________

# - name: "setup-abr-filesystem/main.yml"
#   include: setup-abr-filesystem/main.yml
#   tags:
#     - setup-abr-filesystem
#   when:
#     - abr_setup_abr_filesystem is sameas true

# - name: "setup-mydumper-mloader/main.yml"
#   include: setup-mydumper-mloader/main.yml
#   tags:
#     - setup-mydumper-mloader
#   when:
#     - abr_setup_mydumper_myloader is sameas true

# - name: "setup-rclone/main.yml"
#   include: setup-rclone/main.yml
#   tags:
#     - setup-rclone
#   when:
#     - abr_setup_rclone is sameas true

# - name: "backup/main.yml"
#   include: backup/main.yml
#   tags:
#     - backup
#   when:
#     - (abr_mode == "backup")
#     - (abr_backup_disabled|bool is sameas false)

# - name: "valt-send/main.yml"
#   include: valt-send/main.yml
#   tags:
#     - valt-send
#   when:
#     - (abr_mode == "backup")
#     - (abr_valt_send_disabled|bool is sameas false)

# - name: "valt-receive/main.yml"
#   include: valt-receive/main.yml
#   tags:
#     - valt-receive
#   when:
#     - (abr_mode == "restore")
#     - (abr_valt_receive_disabled|bool is sameas false)

# - name: "full-temp-backup-before-restore/main.yml"
#   include: full-temp-backup-before-restore/main.yml
#   tags:
#     - full-temp-backup-before-restore
#   when:
#     - (abr_mode == "restore")
#     - (abr_paranoid == true)
#     - (abr_valt_restore_disabled|bool is sameas false)

# - name: "restore/main.yml"
#   include: restore/main.yml
#   tags:
#     - restore
#   when:
#     - (abr_mode == "restore")
#     - (abr_valt_restore_disabled is sameas false)
