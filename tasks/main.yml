---

# FILE:            {{ role_path }}/tasks/main.yml
# LICENSE:         Public Domain

- name: "{{ abr__task_prefix }} | ABR {{ abr_version }} Welcome message"
  debug:
    msg:
      # aaaa: "{{ (abr_database is defined and abr_database|bool) | type_debug }}"
      # bbbb: "{{ (abr_database is defined and abr_database|bool) | ternary('_aa', '__bb', '__ccc') }}"
      # aaaa: "{{ ((abr_database is defined and abr_database|bool) | ternary('__' + abr_database, '__all-databases', '__all-databases')) }}"
      abr:
        abr_fs_dirs: "{{ abr_fs_dirs }}"
        # abr_backup_disabled: "{{ abr_backup_disabled }}"
        # abr_restore_disabled: "{{ abr_restore_disabled }}"
      node:
        os: "{{ ansible_os_family | default('undefined') | lower }}"
        dist: "{{ ansible_distribution | default('undefined') | lower }}"
        dist_release: "{{ ansible_distribution_release | default('undefined') | lower }}"
        dist_major_ver: "{{ ansible_distribution_major_version | default('undefined') | lower }}"
        ansible_lsb: "{{ ansible_lsb | default('undefined') }}"
        # If behind NAT, this may not represent real public IPv4.
        # Alternative: https://docs.ansible.com/ansible/latest/modules/ipify_facts_module.html
        ansible_default_ipv4: "{{ ansible_default_ipv4.address | default('undefined') }}"
      run_related:
        ansible_run_tags: "{{ ansible_run_tags | default('undefined') }}"
        ansible_skip_tags: "{{ ansible_skip_tags | default('undefined') }}"
  tags:
    - abr
    - always

## Variable loading based on node Operational System ___________________________
- name: "{{ abr__task_prefix }} | OS Family variables (Override with abr_vars_osfamily)"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ (abr_vars_osfamily is defined) | ternary(abr_vars_osfamily, 'name-of-a-file-that-does-not-exist.yml') }}"
    - "os-family/{{ ansible_os_family | default('undefined') | lower }}.yml"
    - "os-family/{{ (ansible_os_family is defined) | ternary('untested','unknown') }}.yml"
  tags:
    - always

- name: "{{ abr_driver }}.yml"
  include_vars: "{{ include_vars_driver_item }}"
  with_first_found:
    - files:
        - "{{ abr_overrides_directory }}/vars/driver/{{ abr_driver }}.yml"
        - "{{ role_path }}/vars/driver/{{ abr_driver }}.yml"
      skip: true
  loop_control:
    loop_var: "include_vars_driver_item"

- name: |
    {{ abr__task_prefix }} | abr_strategy_encryption:
    {{ abr_strategy_encryption | default('none') }},
    Skip: {{ abr_skip_encryption | default('no', true)}}"
  include_vars: "{{ include_vars_encryption_item }}"
  with_first_found:
    - files:
        - "{{ abr_overrides_directory }}/vars/strategy-encryption/{{ abr_strategy_encryption }}.yml"
        - "{{ role_path }}/vars/strategy-encryption/{{ abr_strategy_encryption }}.yml"
      skip: true
  when:
    - "(abr_strategy_encryption is defined)
      and (abr_strategy_encryption)
      and (abr_strategy_encryption|length > 0)"
    - "(abr_skip_encryption is undefined)
      or (abr_skip_encryption|bool is sameas false)"
  loop_control:
    loop_var: "include_vars_encryption_item"

- name: |
    {{ abr__task_prefix }} | abr_strategy_compression:
    {{ abr_strategy_compression | default('none') }},
    Skip: {{ abr_skip_compression | default('no', true)}}"
  include_vars: "{{ include_vars_compression_item }}"
  with_first_found:
    - files:
        - "{{ abr_overrides_directory }}/vars/strategy-compression{{ abr_strategy_compression }}.yml"
        - "{{ role_path }}/vars/strategy-compression/{{ abr_strategy_compression }}.yml"
      skip: true
  when:
    - "(abr_strategy_compression is defined)
      and (abr_strategy_compression)
      and (abr_strategy_compression|length > 0)"
    - "(abr_skip_compression is undefined)
      or (abr_skip_compression|bool is sameas false)"
  loop_control:
    loop_var: "include_vars_compression_item"

- name: "{{ abr_mode }}.yml"
  # include: "mode-{{ abr_mode }}.yml"
  include: "{{ include_task_mode_item }}"
  with_first_found:
    - "{{ abr_overrides_directory }}/tasks/mode-{{ abr_mode }}.yml"
    - "{{ role_path }}/tasks/mode-{{ abr_mode }}.yml"
  loop_control:
    loop_var: "include_task_mode_item"
